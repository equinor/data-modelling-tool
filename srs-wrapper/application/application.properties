# Note that all properties that start with "sima.runtime.application." can be
# accessed in the JSP-file using i.e. ${title}. 

# Set a title for the application to be used in the web interface
sima.runtime.application.title=SIMA Runtime Application Example

# Specify segments of the URL to the back-end service (this service). All
# properties must have a value in order for the feature to be used. So
# When running on Omnia Radix, RADIX_PUBLIC_DOMAIN_NAME will be set, which 
# triggers the others and the result will be https://<public name:443.
#sima.runtime.service-proto=${RADIX_PUBLIC_DOMAIN_PROTO:https}
#sima.runtime.service-host=${RADIX_PUBLIC_DOMAIN_NAME}
#sima.runtime.service-port=${RADIX_PUBLIC_DOMAIN_PORT:443}

# URL to use when uploading partial result from a SIMA Compute Service. 
# Depending on the network configuration, this should be the same as the URL
# specified above.
sima.runtime.service.internal-proto=${SERVICE_INTERNAL_PROTO:http}
sima.runtime.service.internal-name=${SERVICE_INTERNAL_NAME:localhost}
sima.runtime.service.internal-port=${SERVICE_INTERNAL_PORT:8085}

# This location points to where SIMA puts it's work files. It is also where
# files are placed when being uploaded to the service
sima.runtime.workspace.root=${WORKSPACE_ROOT:/var/opt/sima/workspace}
# This location points to the web root served by the service
sima.runtime.webapp.root=${WEBAPP_ROOT:/var/opt/sima/webapp}


# Run the specified job every five minutes
#sima.runtime.scheduler.cron=0 0/5 * 1/1 * ? *
#sima.runtime.scheduler.command=no.marintek.sima.workflow.run.batch
#sima.runtime.scheduler.parameters=task=Workflow_Example;workflow=Workflow_Introduction;Hs=3;Tp=3;waveDir=45

# Set to true in order to enable debugging
no.sintef.ocean.sima.compute.runtime.service.debug=false
