version: "3.4"

services:
  api:
    build:
      context: ./api
    restart: unless-stopped
    volumes:
      - ./api/:/code
    environment:
      MONGO_INITDB_ROOT_USERNAME: maf
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: maf
      MONGO_DATA_MODELING_TOOL_DATABASE: dmt
    ports:
      - "5000:5000"

  web:
    build: ./web
    restart: unless-stopped

  db:
    image: mongo:4.0.10
    command: --quiet
    volumes:
      - ./data/db:/data/db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: maf
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: maf

  nginx:
    build: ./nginx
    ports:
      - "80:80"

  oauth2:
    build:
      context: ./oauth-proxy
      target: local
    ports:
      - "8081:8081"
    environment:
      OAUTH2_PROXY_CLIENT_ID: 97a6b5bd-63fb-42c6-bb75-7e5de2394ba0
      OAUTH2_PROXY_CLIENT_SECRET: ${OAUTH2_PROXY_CLIENT_SECRET}
      OAUTH2_REDIRECT_URL: http://localhost/oauth2/callback
# Run oauth on localhost.
# 1. redirect_url = "http://localhost:8081/oauth2/callback"
# 2. add redirect_url to Redirect URIs in Azure App Registrations -> <app> -> Authentication
# 3. set CLIENT_ID in .env file.  (Azure App Registrations -> <app> -> Overview)
# 4. set CLIENT_SECRET in .env file. (Azure App Registrations -> <app> -> Certificates & secrets)
# 5. set cookie_secure false

# Note that the oauth-proxy won't protect anything locally, radix will do this in the cluster by setting 8081 to public: true and everything else public: false.
# from host (outside) nginx is on 8080 and proxy on 80.
# from container (inside) nginx is on 80 and proxy on 8081
