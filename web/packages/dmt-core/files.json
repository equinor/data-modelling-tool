{
  "src/components/AccessControlList.tsx": [
    {
      "description": "",
      "displayName": "ACLSelect",
      "methods": []
    },
    {
      "description": "",
      "displayName": "ACLOwnerPanel",
      "methods": [],
      "props": {
        "acl": {
          "required": true,
          "tsType": {
            "name": "signature",
            "type": "object",
            "raw": "{\n  owner: string\n  roles: { [key: string]: ACLEnum }\n  users: { [key: string]: ACLEnum }\n  others: ACLEnum\n}",
            "signature": {
              "properties": [
                {
                  "key": "owner",
                  "value": {
                    "name": "string",
                    "required": true
                  }
                },
                {
                  "key": "roles",
                  "value": {
                    "name": "signature",
                    "type": "object",
                    "raw": "{ [key: string]: ACLEnum }",
                    "signature": {
                      "properties": [
                        {
                          "key": {
                            "name": "string"
                          },
                          "value": {
                            "name": "ACLEnum",
                            "required": true
                          }
                        }
                      ]
                    },
                    "required": true
                  }
                },
                {
                  "key": "users",
                  "value": {
                    "name": "signature",
                    "type": "object",
                    "raw": "{ [key: string]: ACLEnum }",
                    "signature": {
                      "properties": [
                        {
                          "key": {
                            "name": "string"
                          },
                          "value": {
                            "name": "ACLEnum",
                            "required": true
                          }
                        }
                      ]
                    },
                    "required": true
                  }
                },
                {
                  "key": "others",
                  "value": {
                    "name": "ACLEnum",
                    "required": true
                  }
                }
              ]
            }
          },
          "description": ""
        },
        "handleChange": {
          "required": true,
          "tsType": {
            "name": "signature",
            "type": "function",
            "raw": "(data: any) => void",
            "signature": {
              "arguments": [
                {
                  "name": "data",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "return": {
                "name": "void"
              }
            }
          },
          "description": ""
        }
      }
    },
    {
      "description": "",
      "displayName": "ACLUserRolesPanel",
      "methods": [],
      "props": {
        "entities": {
          "required": true,
          "tsType": {
            "name": "signature",
            "type": "object",
            "raw": "{ [key: string]: ACLEnum }",
            "signature": {
              "properties": [
                {
                  "key": {
                    "name": "string"
                  },
                  "value": {
                    "name": "ACLEnum",
                    "required": true
                  }
                }
              ]
            }
          },
          "description": ""
        },
        "handleChange": {
          "required": true,
          "tsType": {
            "name": "signature",
            "type": "function",
            "raw": "(data: any) => void",
            "signature": {
              "arguments": [
                {
                  "name": "data",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "return": {
                "name": "void"
              }
            }
          },
          "description": ""
        },
        "aclKey": {
          "required": true,
          "tsType": {
            "name": "string"
          },
          "description": ""
        }
      }
    },
    {
      "description": "",
      "displayName": "AccessControlList",
      "methods": [],
      "props": {
        "documentId": {
          "required": true,
          "tsType": {
            "name": "string"
          },
          "description": ""
        },
        "dataSourceId": {
          "required": true,
          "tsType": {
            "name": "string"
          },
          "description": ""
        }
      }
    }
  ],
  "src/components/Dialog.tsx": [
    {
      "description": "",
      "displayName": "Dialog",
      "methods": [],
      "props": {
        "closeScrim": {
          "required": true,
          "tsType": {
            "name": "signature",
            "type": "function",
            "raw": "() => void",
            "signature": {
              "arguments": [],
              "return": {
                "name": "void"
              }
            }
          },
          "description": "Provides a url for avatars being used as a link."
        },
        "isOpen": {
          "required": true,
          "tsType": {
            "name": "boolean"
          },
          "description": ""
        },
        "children": {
          "required": true,
          "tsType": {
            "name": "any"
          },
          "description": ""
        },
        "header": {
          "required": true,
          "tsType": {
            "name": "string"
          },
          "description": ""
        },
        "width": {
          "required": false,
          "tsType": {
            "name": "string"
          },
          "description": ""
        },
        "height": {
          "required": false,
          "tsType": {
            "name": "string"
          },
          "description": ""
        }
      }
    }
  ],
  "src/components/DynamicTable.tsx": [
    {
      "description": "",
      "displayName": "DynamicTable",
      "methods": [],
      "props": {
        "columns": {
          "required": true,
          "tsType": {
            "name": "Array",
            "elements": [
              {
                "name": "string"
              }
            ],
            "raw": "Array<string>"
          },
          "description": ""
        },
        "rows": {
          "required": true,
          "tsType": {
            "name": "Array",
            "elements": [
              {
                "name": "any"
              }
            ],
            "raw": "Array<any>"
          },
          "description": ""
        },
        "onRowClicked": {
          "required": false,
          "tsType": {
            "name": "MouseEventHandler"
          },
          "description": ""
        }
      }
    }
  ],
  "src/components/Header.tsx": [
    {
      "description": "",
      "displayName": "Header",
      "methods": [],
      "props": {
        "appName": {
          "required": true,
          "tsType": {
            "name": "string"
          },
          "description": ""
        },
        "urlPath": {
          "required": true,
          "tsType": {
            "name": "string"
          },
          "description": ""
        },
        "allApps": {
          "required": true,
          "tsType": {
            "name": "Array",
            "elements": [
              {
                "name": "DmtSettings"
              }
            ],
            "raw": "DmtSettings[]"
          },
          "description": ""
        }
      }
    }
  ],
  "src/components/Loading.tsx": [
    {
      "description": "",
      "displayName": "Loading",
      "methods": []
    }
  ],
  "src/components/NewEntityButton.tsx": [
    {
      "description": "",
      "displayName": "NewEntityButton",
      "methods": [],
      "props": {
        "type": {
          "required": false,
          "tsType": {
            "name": "string"
          },
          "description": ""
        },
        "setReference": {
          "required": true,
          "tsType": {
            "name": "signature",
            "type": "function",
            "raw": "(r: TReference) => void",
            "signature": {
              "arguments": [
                {
                  "name": "r",
                  "type": {
                    "name": "TReference"
                  }
                }
              ],
              "return": {
                "name": "void"
              }
            }
          },
          "description": ""
        },
        "defaultDestination": {
          "required": false,
          "tsType": {
            "name": "string"
          },
          "description": ""
        }
      }
    }
  ],
  "src/components/TreeView.tsx": [
    {
      "description": "",
      "displayName": "GetIcon",
      "methods": [],
      "props": {
        "node": {
          "required": true,
          "tsType": {
            "name": "TreeNode"
          },
          "description": ""
        },
        "expanded": {
          "required": true,
          "tsType": {
            "name": "boolean"
          },
          "description": ""
        }
      }
    },
    {
      "description": "",
      "displayName": "TreeNodeComponent",
      "methods": [],
      "props": {
        "node": {
          "required": true,
          "tsType": {
            "name": "TreeNode"
          },
          "description": ""
        },
        "expanded": {
          "required": true,
          "tsType": {
            "name": "boolean"
          },
          "description": ""
        },
        "onClick": {
          "required": true,
          "tsType": {
            "name": "signature",
            "type": "function",
            "raw": "(node: TreeNode, setLoading: (l: boolean) => void) => void",
            "signature": {
              "arguments": [
                {
                  "name": "node",
                  "type": {
                    "name": "TreeNode"
                  }
                },
                {
                  "name": "setLoading",
                  "type": {
                    "name": "signature",
                    "type": "function",
                    "raw": "(l: boolean) => void",
                    "signature": {
                      "arguments": [
                        {
                          "name": "l",
                          "type": {
                            "name": "boolean"
                          }
                        }
                      ],
                      "return": {
                        "name": "void"
                      }
                    }
                  }
                }
              ],
              "return": {
                "name": "void"
              }
            }
          },
          "description": ""
        }
      }
    },
    {
      "description": "",
      "displayName": "TreeView",
      "methods": [],
      "props": {
        "nodes": {
          "required": true,
          "tsType": {
            "name": "Array",
            "elements": [
              {
                "name": "TreeNode"
              }
            ],
            "raw": "TreeNode[]"
          },
          "description": ""
        },
        "onSelect": {
          "required": true,
          "tsType": {
            "name": "signature",
            "type": "function",
            "raw": "(node: TreeNode) => void",
            "signature": {
              "arguments": [
                {
                  "name": "node",
                  "type": {
                    "name": "TreeNode"
                  }
                }
              ],
              "return": {
                "name": "void"
              }
            }
          },
          "description": ""
        },
        "NodeWrapper": {
          "required": false,
          "tsType": {
            "name": "ReactFunctionComponent",
            "raw": "React.FunctionComponent<NodeWrapperProps>",
            "elements": [
              {
                "name": "signature",
                "type": "object",
                "raw": "{\n  node: TreeNode\n  removeNode?: () => void\n  children: any\n  onSelect?: (node: TreeNode) => void\n}",
                "signature": {
                  "properties": [
                    {
                      "key": "node",
                      "value": {
                        "name": "TreeNode",
                        "required": true
                      }
                    },
                    {
                      "key": "removeNode",
                      "value": {
                        "name": "signature",
                        "type": "function",
                        "raw": "() => void",
                        "signature": {
                          "arguments": [],
                          "return": {
                            "name": "void"
                          }
                        },
                        "required": false
                      }
                    },
                    {
                      "key": "children",
                      "value": {
                        "name": "any",
                        "required": true
                      }
                    },
                    {
                      "key": "onSelect",
                      "value": {
                        "name": "signature",
                        "type": "function",
                        "raw": "(node: TreeNode) => void",
                        "signature": {
                          "arguments": [
                            {
                              "name": "node",
                              "type": {
                                "name": "TreeNode"
                              }
                            }
                          ],
                          "return": {
                            "name": "void"
                          }
                        },
                        "required": false
                      }
                    }
                  ]
                }
              }
            ]
          },
          "description": ""
        },
        "NodeWrapperOnClick": {
          "required": false,
          "tsType": {
            "name": "signature",
            "type": "function",
            "raw": "(node: TreeNode) => void",
            "signature": {
              "arguments": [
                {
                  "name": "node",
                  "type": {
                    "name": "TreeNode"
                  }
                }
              ],
              "return": {
                "name": "void"
              }
            }
          },
          "description": ""
        }
      }
    }
  ],
  "src/components/UiPluginSelector.tsx": [
    {
      "description": "",
      "displayName": "DocumentPath",
      "methods": [],
      "props": {
        "absoluteDottedId": {
          "required": true,
          "tsType": {
            "name": "string"
          },
          "description": ""
        }
      }
    },
    {
      "description": "",
      "displayName": "UIPluginSelector",
      "methods": [],
      "props": {
        "absoluteDottedId": {
          "required": false,
          "tsType": {
            "name": "string"
          },
          "description": ""
        },
        "type": {
          "required": true,
          "tsType": {
            "name": "string"
          },
          "description": ""
        },
        "onSubmit": {
          "required": false,
          "tsType": {
            "name": "signature",
            "type": "function",
            "raw": "(data: any) => void",
            "signature": {
              "arguments": [
                {
                  "name": "data",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "return": {
                "name": "void"
              }
            }
          },
          "description": ""
        },
        "categories": {
          "required": false,
          "tsType": {
            "name": "Array",
            "elements": [
              {
                "name": "string"
              }
            ],
            "raw": "string[]"
          },
          "description": ""
        },
        "breadcrumb": {
          "required": false,
          "tsType": {
            "name": "boolean"
          },
          "description": ""
        },
        "referencedBy": {
          "required": false,
          "tsType": {
            "name": "string"
          },
          "description": ""
        },
        "onOpen": {
          "required": false,
          "tsType": {
            "name": "signature",
            "type": "function",
            "raw": "(data: any) => void",
            "signature": {
              "arguments": [
                {
                  "name": "data",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "return": {
                "name": "void"
              }
            }
          },
          "description": ""
        }
      }
    }
  ],
  "src/components/UploadFileButton.tsx": [
    {
      "description": "",
      "displayName": "UploadFileButton",
      "methods": [],
      "props": {
        "fileSuffix": {
          "required": true,
          "tsType": {
            "name": "Array",
            "elements": [
              {
                "name": "string"
              }
            ],
            "raw": "string[]"
          },
          "description": ""
        },
        "getBody": {
          "required": true,
          "tsType": {
            "name": "signature",
            "type": "function",
            "raw": "(filename: string) => any",
            "signature": {
              "arguments": [
                {
                  "name": "filename",
                  "type": {
                    "name": "string"
                  }
                }
              ],
              "return": {
                "name": "any"
              }
            }
          },
          "description": ""
        },
        "dataSourceId": {
          "required": true,
          "tsType": {
            "name": "string"
          },
          "description": ""
        },
        "onUpload": {
          "required": true,
          "tsType": {
            "name": "signature",
            "type": "function",
            "raw": "(createdRef: TReference) => void",
            "signature": {
              "arguments": [
                {
                  "name": "createdRef",
                  "type": {
                    "name": "TReference"
                  }
                }
              ],
              "return": {
                "name": "void"
              }
            }
          },
          "description": ""
        },
        "formData": {
          "required": true,
          "tsType": {
            "name": "string"
          },
          "description": ""
        }
      }
    }
  ]
}
