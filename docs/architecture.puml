@startuml
'!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!define DEV_ICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons2
!includeurl DEV_ICONS/python.puml
!includeurl DEV_ICONS/docker.puml
!includeurl DEV_ICONS/react_original.puml

!define osaPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-opensecurityarchitecture2-icons/master
!include osaPuml/Common.puml
!include osaPuml/User/all.puml
!include <office/Servers/database_server>
!include <office/Servers/file_server>
!include <office/Servers/application_server>
!include <office/Concepts/service_application>
!include <office/Concepts/firewall>


LAYOUT_WITH_LEGEND()

Person(domain_expert, "Domain Expert", "A user that wants to be able to model a new type of offshore operation.")

AddRelTag("not_implemented", $lineColor="red")

System_Boundary(local_boundary, "Personal Computer") {
  System_Ext(sima, "Sima Desktop Application", "Application for simulation and analysis of marine operations and floating systems.")
  Rel(domain_expert, sima, "Design models and simulations")
}

System_Boundary(sintef, "Azure (Sintef)") {
    Container_Ext(sintef_container_registry, "Container registry", "dmtregistry.azurecr.io", "Contains public docker images", "docker")
}

System_Boundary(github_boundary, "Github", $link="https://github.com/equinor/dmt-mooring-analysis") {
    System_Ext(github, "Github Repository", "Containing resources required for creating sima task (stask).")
    Rel(sima, github, "Push models and simulations")
    System_Ext(github_actions, "Github Actions", "Create sima task (stask) using the sima runtime docker images. It will run tests and archive sima tasks and report inside repository if successfully.")
    Rel(github_actions, sintef_container_registry, "Pull sima-runtime image")
    Rel(github, github_actions, "Trigger builds")
}

System_Boundary(azure, "Azure (Omnia Standalone)", $link="https://portal.azure.com/#@StatoilSRM.onmicrosoft.com/resource/subscriptions/1d249b90-3592-49bd-b14e-446340a5cf6b/resourceGroups/MSARGDev/overview") {
    System(private_container_registry, "Private container registry", "Contains non-public docker images", "docker")
    System(public_container_registry, "Public container registry", "Contains public docker images. This is done because Azure jobs need to be able to pull simulation job images, and since it is not possible to specify on image level permissions.", "docker")
    ContainerDb(blob_storage, "Blob Storage", "Azure Blob Storage", "Contains different type of data", "database_server")
    ContainerDb(cosmos_db, "NoSQL Data Store", "Azure Cosmos DB", "Contains documents (e.g. blueprints, entities, sima tasks). Also used as the main internal database (ACL lists, data sources).", "database_server")
    ContainerDb(redis, "NoSQL Data Store", "Redis", "In-memory data storage used as cache for jobs", "database_server")
}

System_Boundary(radix, "Radix", $link="https://console.radix.equinor.com/applications/forecast-of-response") {
    Container(data_modelling_tool_web, "Web application", "JavaScript and React", "Entrypoint to access the DMT and analysis portal. The user interface used for modelling, searching, and viewing blueprint based domain models.", "react_original")
    Container(data_modelling_tool_api, "DMT API", "Python and Fast API", "The API that handles business logic for DMT (index creation, helper functions).", "python")
    Container(job_api, "Job API", "Python and Fast API", "The API handles schedule jobs", "python")
    Rel(data_modelling_tool_web, data_modelling_tool_api, "Uses")
    Container(data_modelling_storage_service, "Data Modelling Storage Service", "Python and Fast API", "Handles the storing and retrieving of documents.", "python")

    Rel(github_actions, data_modelling_storage_service, "Upload sima task", "HTTPS", $tags="not_implemented")
    Rel(data_modelling_tool_api, data_modelling_storage_service, "Read and write")
    Rel(data_modelling_storage_service, cosmos_db, "Read and write")
    Rel(data_modelling_storage_service, blob_storage, "Read and write")
    Rel(job_api, redis, "Read and write")
    Rel(data_modelling_tool_api, private_container_registry, "Pull dmt/api image")
    Rel(data_modelling_tool_web, private_container_registry, "Pull dmt/web image")
    Rel(data_modelling_storage_service, private_container_registry, "Pull dmt/dmss image")
    Rel(data_modelling_tool_web, job_api, "Start and stop jobs", $tags="not_implemented")
}

System_Boundary(azure_compute, "Azure (Omnia Classic)", $link="https://portal.azure.com/#@StatoilSRM.onmicrosoft.com/resource/subscriptions/93b83577-619d-4fb9-bfdf-f7a07d24cfbe/resourceGroups/S059-Forecast-of-response/overview") {
    Container(azure_job, "Azure Job", "Azure container instance", "Running simulation on demand", "python")
    Rel(job_api, azure_job, "Register and start jobs using ARM templates using Azure Python Azure SDK. We use ARM templates since Omnia Classic has restrictions.", $tags="not_implemented")
    Rel(azure_job, public_container_registry, "Pull dmt-job/srs image")
    System_Ext(compute_cluster, "Sima Compute Cluster", "Run simulations using cluster")
    Rel(azure_job, compute_cluster, "Run remote jobs")
}

@enduml