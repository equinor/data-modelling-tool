@startuml

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

LAYOUT_WITH_LEGEND()

Person(domain_export, "Domain Expert", "A user that wants to do modelling.")
Person(application_developer, "Application Developer", "A user that wants to develop custom applications.")
Person(application_users, "Application User", "A user that wants to use custom applications.")

System_Boundary(data_modelling_tool, "Data Modelling Tool") {
    Container(data_modelling_tool_web, "Web application", "JavaScript and React", "The user interface used for modelling, searching, and viewing blueprint based domain models.")
    Container(data_modelling_tool_api, "Rest API", "Python and Flask", "The API that handles business logic for DMT.")
    Rel(data_modelling_tool_web, data_modelling_tool_api, "Uses")
}

Rel(domain_export, data_modelling_tool_web, "Uses")
Rel(application_developer, data_modelling_tool_web, "Uses")
Rel(application_users, data_modelling_tool_web, "Uses")

Container_Ext(data_modelling_storage_service, "Data Modelling Storage Service System", "Python and Flask", "Handles the storing and retrieving of data.")
Rel(data_modelling_tool_api, data_modelling_storage_service, "Read and write")

ContainerDb(data_source_a, "Data Source A", "MongoDB", "Holds documents (e.g. blueprints and entities).")
ContainerDb(data_source_b, "Data Source B", "Azure Blob Storage", "Holds different type of data.")
Rel(data_modelling_storage_service, data_source_a, "Read and write")
Rel(data_modelling_storage_service, data_source_b, "Read and write")

@enduml