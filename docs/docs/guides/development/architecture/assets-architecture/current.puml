@startuml

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

LAYOUT_WITH_LEGEND()

Person(domain_export, "Domain Expert", "A user that wants to do modelling.")
Person(application_developer, "Application Developer", "A user that wants to develop custom applications.")
Person(application_users, "Application User", "A user that wants to use custom applications.")

System(data_modelling_tool, "Data Modelling Tool", "A tool for modelling, searching, and viewing blueprint based domain models.")

Rel(domain_export, data_modelling_tool, "Uses")
Rel(application_developer, data_modelling_tool, "Uses")
Rel(application_users, data_modelling_tool, "Uses")

System_Ext(data_modelling_storage_service, "Data Modelling Storage Service System", "Handles the storing and retrieving of data.")
Rel(data_modelling_tool, data_modelling_storage_service, "Read and write")

System_Ext(data_source_a, "Data Source", "The first data source that has it's own storage options.")

System_Ext(data_source_b, "Data Source", "The second data source that has it's own storage options.")

Rel(data_modelling_storage_service, data_source_a, "Read and write")
Rel(data_modelling_storage_service, data_source_b, "Read and write")

ContainerDb(db_a, "MongoDB", "The first db.")
ContainerDb(db_b, "PostgresQL", "The second db.")
ContainerDb(db_c, "Azure Blob Storage", "The third db.")

Rel(data_source_a, db_a, "Read and write")
Rel(data_source_a, db_b, "Read and write")
Rel(data_source_a, db_c, "Read and write")

ContainerDb(db_d, "MongoDB", "The first db.")
Rel(data_source_b, db_d, "Read and write")

@enduml